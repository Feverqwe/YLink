const {DefinePlugin} = require('webpack');
const {CleanWebpackPlugin} = require('clean-webpack-plugin');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const Path = require('path');


const isProduction = process.argv[process.argv.indexOf('--mode') + 1] !== 'development';

const outputPath = Path.resolve('../app/src/main/assets');

const config = {
  entry: {
    index: './src/js/index',
  },
  output: {
    path: outputPath,
    filename: 'js/[name].js'
  },
  target: ['web', 'es5'],
  devtool: 'source-map',
  module: {
    rules: [
      {
        test: /\.[jt]sx?$/,
        use: 'ts-loader',
        resource: (resource) => {
          if (/node_modules/.test(resource)) {
            if (/node_modules[\\/](debug|serialize-error)/.test(resource)) {
              return true;
            }
            return false;
          }
          return true;
        },
      },
      {
        test: /\.js$/,
        exclude: /node_modules/,
        use: {
          loader: 'babel-loader',
          options: {
            presets: [
              ['@babel/preset-env', {
                targets: {
                  browsers: ['Android >= 11']
                },
                useBuiltIns: 'usage',
                corejs: 3,
              }]
            ]
          }
        }
      }
    ]
  },
  plugins: [
    new CleanWebpackPlugin({
      dry: false,
      dangerouslyAllowCleanPatternsOutsideProject: true,
      cleanStaleWebpackAssets: false,
      cleanOnceBeforeBuildPatterns: [outputPath]
    }),
    new HtmlWebpackPlugin({
      filename: Path.join(outputPath, 'index.html'),
      template: './src/index.html',
      minify: {
        html5: true,
        includeAutoGeneratedTags: true,
        removeComments: true,
        collapseWhitespace: true
      },
    }),
    new DefinePlugin({
      'process.env': {
        DEBUG: JSON.stringify('app:*')
      }
    }),
  ],
  resolve: {
    fallback: {
      querystring: require.resolve('querystring-es3')
    }
  }
};

if (isProduction) {
  delete config.devtool;
}

module.exports = config;
